{"version":3,"sources":["./src/app/game/components/card/card.component.ts","./src/app/game/components/card/card.component.html","./src/app/game/game-routing.module.ts","./src/app/game/services/cards.service.ts","./src/app/game/services/player.service.ts","./src/app/game/components/board/board.component.html","./src/app/game/components/board/board.component.ts","./src/app/game/game.module.ts"],"names":[],"mappings":"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","file":"game-game-module.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Card } from '../../models/card.model';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() card: Card;\r\n  @Input() disabled: Boolean = false;\r\n  @Output() selected: EventEmitter<Number> = new EventEmitter<Number>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public reveal(): void {\r\n    if (!this.disabled) {\r\n      this.card.revealed = true;\r\n      this.selected.emit(this.card.id);\r\n    }\r\n  }\r\n}\r\n","<div class=\"card-container\">\r\n    <button *ngIf=\"this.card\" class=\"card-body\" (click)=\"reveal()\">\r\n        <img *ngIf=\"this.card.revealed\" class=\"card-image\" [src]=\"this.card.imageUrl\" [alt]=\"this.card.cardName\">\r\n    </button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BoardComponent } from './components/board/board.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'', component:BoardComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GameRoutingRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Card } from '../models/card.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CardsService {\r\n  private availableCards: Card[] = [\r\n    {\r\n      id: 1,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/arrow.svg',\r\n      cardName: 'Flecha',\r\n    },\r\n    {\r\n      id: 2,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/brush.svg',\r\n      cardName: 'Pincel',\r\n    },\r\n    {\r\n      id: 3,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/camera.svg',\r\n      cardName: 'Cámara',\r\n    },\r\n    {\r\n      id: 4,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/fish.svg',\r\n      cardName: 'Pez',\r\n    },\r\n    {\r\n      id: 5,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/laptop.svg',\r\n      cardName: 'Laptop',\r\n    },\r\n    {\r\n      id: 6,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/lightbulb.svg',\r\n      cardName: 'Lámpara',\r\n    },\r\n    {\r\n      id: 7,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/mortarboard-hat.svg',\r\n      cardName: 'Bonete',\r\n    },\r\n    {\r\n      id: 8,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/owl.svg',\r\n      cardName: 'Buho',\r\n    },\r\n    {\r\n      id: 9,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/popsicles.svg',\r\n      cardName: 'Helados',\r\n    },\r\n    {\r\n      id: 10,\r\n      revealed: false,\r\n      imageUrl: 'assets/images/flower.svg',\r\n      cardName: 'Flor',\r\n    },\r\n  ];\r\n\r\n  public cards: Card[] = [\r\n    { ...this.availableCards[0] },\r\n    { ...this.availableCards[1] },\r\n    { ...this.availableCards[2] },\r\n    { ...this.availableCards[3] },\r\n    { ...this.availableCards[4] },\r\n    { ...this.availableCards[5] },\r\n    { ...this.availableCards[6] },\r\n    { ...this.availableCards[7] },\r\n    { ...this.availableCards[8] },\r\n    { ...this.availableCards[9] },\r\n    { ...this.availableCards[0] },\r\n    { ...this.availableCards[1] },\r\n    { ...this.availableCards[2] },\r\n    { ...this.availableCards[3] },\r\n    { ...this.availableCards[4] },\r\n    { ...this.availableCards[5] },\r\n    { ...this.availableCards[6] },\r\n    { ...this.availableCards[7] },\r\n    { ...this.availableCards[8] },\r\n    { ...this.availableCards[9] },\r\n  ];\r\n  constructor() {}\r\n\r\n  public dealHand(): Observable<Card[]> {\r\n    const cardsArray: Card[] = [];\r\n    const totalCardsAmount = 20;\r\n    const takenIndex: Number[] = [];\r\n    this.availableCards.forEach((card) => {\r\n      let firstIndex = Math.floor(Math.random() * totalCardsAmount);\r\n      while (takenIndex.includes(firstIndex))\r\n        firstIndex = Math.floor(Math.random() * totalCardsAmount);\r\n      takenIndex.push(firstIndex);\r\n      let secondIndex = Math.floor(Math.random() * totalCardsAmount);\r\n      while (takenIndex.includes(secondIndex))\r\n        secondIndex = Math.floor(Math.random() * totalCardsAmount);\r\n      takenIndex.push(secondIndex);\r\n      cardsArray[firstIndex] = { ...card };\r\n      cardsArray[secondIndex] = { ...card };\r\n    });\r\n    return of(cardsArray);\r\n  }\r\n\r\n  public checkRevealed(cards: Card[]): Boolean {\r\n    return cards.every((card) => card.revealed === true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Player } from '../models/player.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService {\r\n  private player1: Player = {id:1, score: 0};\r\n  private player2: Player = {id:2, score: 0}\r\n  public currentPlayer: BehaviorSubject<Player> = new BehaviorSubject(this.player1);\r\n\r\n  constructor() { }\r\n\r\n  public togglePlayer() {\r\n    this.currentPlayer.next(this.currentPlayer.value === this.player1? this.player2: this.player1);\r\n  }\r\n\r\n  public resetScores() {\r\n    this.player1.score = 0;\r\n    this.player2.score = 0;\r\n    this.currentPlayer.next(this.player1);\r\n  }\r\n}\r\n","<div class=\"board-container\">\r\n    <h1 class=\"players-turn\">Turno de jugador {{currentPlayer.id}}</h1>\r\n    <div class=\"main-board\">\r\n        <app-card *ngFor=\"let card of cards\" [card]='card' [disabled]=\"disabled\" (selected)='checkMatch($event)'></app-card>\r\n        <div class=\"end-game-modal\" *ngIf=\"gameResult\">\r\n          <h1>El juego ha terminado!</h1>\r\n          <p>Resultado: {{gameResult}}</p>\r\n        </div>\r\n    </div>\r\n    <p>Tiempo restante: {{timeLeft}} segundo{{timeLeft !== 1 ? 's' : ''}}.</p>\r\n    <div class=\"score\">\r\n        <h2>Puntajes</h2>\r\n        <div class=\"score__player-one\">\r\n            <p>Jugador 1: {{scores[0].score}}</p>\r\n        </div>\r\n        <div class=\"score__player-two\">\r\n            <p>Jugador 2: {{scores[1].score}}</p>\r\n        </div>\r\n    </div>\r\n    <button (click)=\"reset()\">Reiniciar</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Card } from '../../models/card.model';\r\nimport { Player } from '../../models/player.model';\r\nimport { CardsService } from '../../services/cards.service';\r\nimport { PlayerService } from '../../services/player.service';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.scss'],\r\n})\r\nexport class BoardComponent implements OnInit {\r\n  public currentPlayer: Player;\r\n  public scores: { id: number; score: number }[] = [\r\n    { id: 1, score: 0 },\r\n    { id: 2, score: 0 },\r\n  ];\r\n  private previouslySelected: number;\r\n  public gameResult: string = null;\r\n  public cards: Card[] = [];\r\n  public timeLeft: number = 10;\r\n  public disabled = false;\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private cardsService: CardsService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.playerService.currentPlayer.subscribe(\r\n      (res) => (this.currentPlayer = res)\r\n    );\r\n    this.cardsService.dealHand().subscribe((res) => (this.cards = res));\r\n    setInterval(() => this.timeControl(), 1000);\r\n  }\r\n\r\n  public checkMatch(cardId: number): void {\r\n    this.disabled = true;\r\n    if (!this.previouslySelected) {\r\n      this.previouslySelected = cardId;\r\n      this.disabled = false;\r\n    } else {\r\n      const success = this.previouslySelected === cardId;\r\n      setTimeout(() => {\r\n        if (!success) {\r\n          this.cards\r\n            .filter(\r\n              (card) =>\r\n                card.id === cardId || card.id === this.previouslySelected\r\n            )\r\n            .forEach((card) => (card.revealed = false));\r\n        }\r\n        this.endTurn(success);\r\n        this.previouslySelected = null;\r\n        this.disabled = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  private endTurn(success: boolean) {\r\n    if (success) {\r\n      this.currentPlayer.score += 1;\r\n      this.scores.find(\r\n        (player) => player.id === this.currentPlayer.id\r\n      ).score += 1;\r\n    } else {\r\n      this.playerService.togglePlayer();\r\n    }\r\n    this.timeLeft = 10;\r\n    if (this.cardsService.checkRevealed(this.cards)) this.endGame();\r\n  }\r\n\r\n  public reset(): void {\r\n    this.scores.forEach((player) => (player.score = 0));\r\n    this.playerService.resetScores();\r\n    this.cards.forEach((card) => (card.revealed = false));\r\n    this.gameResult = null;\r\n  }\r\n\r\n  private endGame(): void {\r\n    if (this.scores[0].score === this.scores[1].score) {\r\n      this.gameResult = 'Es un empate!';\r\n    } else {\r\n      this.gameResult =\r\n        this.scores[0].score > this.scores[1].score\r\n          ? `Ha ganado el Jugador 1 con ${this.scores[0].score} puntos!`\r\n          : `Ha ganado el Jugador 2 con ${this.scores[1].score} puntos!`;\r\n    }\r\n    this.timeLeft = 0;\r\n  }\r\n\r\n  private timeControl() {\r\n    if (this.timeLeft <= 0) {\r\n      this.endTurn(false);\r\n    } else {\r\n      this.timeLeft -= 1;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BoardComponent } from './components/board/board.component';\r\nimport { GameRoutingRoutingModule } from './game-routing.module';\r\nimport { CardComponent } from './components/card/card.component';\r\nimport { PlayerService } from './services/player.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [BoardComponent, CardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GameRoutingRoutingModule\r\n  ],\r\n  exports:[BoardComponent],\r\n  providers:[PlayerService]\r\n})\r\nexport class GameModule { }\r\n"],"sourceRoot":"webpack:///"}